<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DemirbasDbDataSet" targetNamespace="http://tempuri.org/DemirbasDbDataSet.xsd" xmlns:mstns="http://tempuri.org/DemirbasDbDataSet.xsd" xmlns="http://tempuri.org/DemirbasDbDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DemirbasDbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DemirbasDbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.KücükPrensManagment.Properties.Settings.GlobalReference.Default.DemirbasDbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BranchesTableAdapter" GeneratorDataComponentClassName="BranchesTableAdapter" Name="Branches" UserDataComponentName="BranchesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DemirbasDbConnectionString (Settings)" DbObjectName="DemirbasDb.dbo.Branches" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Branches] WHERE (([BranchId] = @Original_BranchId) AND ([BranchName] = @Original_BranchName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BranchId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BranchId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BranchName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BranchName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Branches] ([BranchName]) VALUES (@BranchName);
SELECT BranchId, BranchName FROM Branches WHERE (BranchId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BranchName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BranchName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BranchId, BranchName FROM dbo.Branches</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Branches] SET [BranchName] = @BranchName WHERE (([BranchId] = @Original_BranchId) AND ([BranchName] = @Original_BranchName));
SELECT BranchId, BranchName FROM Branches WHERE (BranchId = @BranchId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BranchName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BranchName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BranchId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BranchId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BranchName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BranchName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BranchId" ColumnName="BranchId" DataSourceName="DemirbasDb.dbo.Branches" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BranchId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BranchId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BranchId" DataSetColumn="BranchId" />
              <Mapping SourceColumn="BranchName" DataSetColumn="BranchName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DocumentsTableAdapter" GeneratorDataComponentClassName="DocumentsTableAdapter" Name="Documents" UserDataComponentName="DocumentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DemirbasDbConnectionString (Settings)" DbObjectName="DemirbasDb.dbo.Documents" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Documents] WHERE (([DocumentId] = @Original_DocumentId) AND ((@IsNull_InventoriesTypeId = 1 AND [InventoriesTypeId] IS NULL) OR ([InventoriesTypeId] = @Original_InventoriesTypeId)) AND ((@IsNull_DocumentsDate = 1 AND [DocumentsDate] IS NULL) OR ([DocumentsDate] = @Original_DocumentsDate)) AND ([DocumentPrice] = @Original_DocumentPrice) AND ([DocumentCompany] = @Original_DocumentCompany))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DocumentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DocumentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DocumentsDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DocumentsDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_DocumentsDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="DocumentsDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DocumentPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DocumentPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_DocumentCompany" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DocumentCompany" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Documents] ([InventoriesTypeId], [DocumentsDate], [DocumentPrice], [DocumentCompany]) VALUES (@InventoriesTypeId, @DocumentsDate, @DocumentPrice, @DocumentCompany);
SELECT DocumentId, InventoriesTypeId, DocumentsDate, DocumentPrice, DocumentCompany FROM Documents WHERE (DocumentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@DocumentsDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="DocumentsDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DocumentPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DocumentPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DocumentCompany" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DocumentCompany" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT DocumentId, InventoriesTypeId, DocumentsDate, DocumentPrice, DocumentCompany FROM dbo.Documents</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Documents] SET [InventoriesTypeId] = @InventoriesTypeId, [DocumentsDate] = @DocumentsDate, [DocumentPrice] = @DocumentPrice, [DocumentCompany] = @DocumentCompany WHERE (([DocumentId] = @Original_DocumentId) AND ((@IsNull_InventoriesTypeId = 1 AND [InventoriesTypeId] IS NULL) OR ([InventoriesTypeId] = @Original_InventoriesTypeId)) AND ((@IsNull_DocumentsDate = 1 AND [DocumentsDate] IS NULL) OR ([DocumentsDate] = @Original_DocumentsDate)) AND ([DocumentPrice] = @Original_DocumentPrice) AND ([DocumentCompany] = @Original_DocumentCompany));
SELECT DocumentId, InventoriesTypeId, DocumentsDate, DocumentPrice, DocumentCompany FROM Documents WHERE (DocumentId = @DocumentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@DocumentsDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="DocumentsDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DocumentPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DocumentPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DocumentCompany" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DocumentCompany" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DocumentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DocumentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DocumentsDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DocumentsDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_DocumentsDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="DocumentsDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DocumentPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DocumentPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_DocumentCompany" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DocumentCompany" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DocumentId" ColumnName="DocumentId" DataSourceName="DemirbasDb.dbo.Documents" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DocumentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="DocumentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DocumentId" DataSetColumn="DocumentId" />
              <Mapping SourceColumn="InventoriesTypeId" DataSetColumn="InventoriesTypeId" />
              <Mapping SourceColumn="DocumentsDate" DataSetColumn="DocumentsDate" />
              <Mapping SourceColumn="DocumentPrice" DataSetColumn="DocumentPrice" />
              <Mapping SourceColumn="DocumentCompany" DataSetColumn="DocumentCompany" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InventoriesTableAdapter" GeneratorDataComponentClassName="InventoriesTableAdapter" Name="Inventories" UserDataComponentName="InventoriesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DemirbasDbConnectionString (Settings)" DbObjectName="DemirbasDb.dbo.Inventories" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Inventories] WHERE (([InventoryId] = @Original_InventoryId) AND ((@IsNull_InventoriesTypeId = 1 AND [InventoriesTypeId] IS NULL) OR ([InventoriesTypeId] = @Original_InventoriesTypeId)) AND ([InventoryBarkod] = @Original_InventoryBarkod) AND ((@IsNull_RoomId = 1 AND [RoomId] IS NULL) OR ([RoomId] = @Original_RoomId)) AND ((@IsNull_PersonnelId = 1 AND [PersonnelId] IS NULL) OR ([PersonnelId] = @Original_PersonnelId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_InventoryBarkod" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="InventoryBarkod" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PersonnelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonnelId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonnelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonnelId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Inventories] ([InventoriesTypeId], [InventoryBarkod], [RoomId], [PersonnelId]) VALUES (@InventoriesTypeId, @InventoryBarkod, @RoomId, @PersonnelId);
SELECT InventoryId, InventoriesTypeId, InventoryBarkod, RoomId, PersonnelId FROM Inventories WHERE (InventoryId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@InventoryBarkod" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="InventoryBarkod" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonnelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonnelId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT InventoryId, InventoriesTypeId, InventoryBarkod, RoomId, PersonnelId FROM dbo.Inventories</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Inventories] SET [InventoriesTypeId] = @InventoriesTypeId, [InventoryBarkod] = @InventoryBarkod, [RoomId] = @RoomId, [PersonnelId] = @PersonnelId WHERE (([InventoryId] = @Original_InventoryId) AND ((@IsNull_InventoriesTypeId = 1 AND [InventoriesTypeId] IS NULL) OR ([InventoriesTypeId] = @Original_InventoriesTypeId)) AND ([InventoryBarkod] = @Original_InventoryBarkod) AND ((@IsNull_RoomId = 1 AND [RoomId] IS NULL) OR ([RoomId] = @Original_RoomId)) AND ((@IsNull_PersonnelId = 1 AND [PersonnelId] IS NULL) OR ([PersonnelId] = @Original_PersonnelId)));
SELECT InventoryId, InventoriesTypeId, InventoryBarkod, RoomId, PersonnelId FROM Inventories WHERE (InventoryId = @InventoryId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@InventoryBarkod" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="InventoryBarkod" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonnelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonnelId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_InventoryBarkod" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="InventoryBarkod" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PersonnelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonnelId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonnelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonnelId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="InventoryId" ColumnName="InventoryId" DataSourceName="DemirbasDb.dbo.Inventories" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@InventoryId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="InventoryId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="InventoryId" DataSetColumn="InventoryId" />
              <Mapping SourceColumn="InventoriesTypeId" DataSetColumn="InventoriesTypeId" />
              <Mapping SourceColumn="InventoryBarkod" DataSetColumn="InventoryBarkod" />
              <Mapping SourceColumn="RoomId" DataSetColumn="RoomId" />
              <Mapping SourceColumn="PersonnelId" DataSetColumn="PersonnelId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InventoriesTypesTableAdapter" GeneratorDataComponentClassName="InventoriesTypesTableAdapter" Name="InventoriesTypes" UserDataComponentName="InventoriesTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DemirbasDbConnectionString (Settings)" DbObjectName="DemirbasDb.dbo.InventoriesTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[InventoriesTypes] WHERE (([InventoriesTypeId] = @Original_InventoriesTypeId) AND ([InventoriesTypeName] = @Original_InventoriesTypeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_InventoriesTypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="InventoriesTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[InventoriesTypes] ([InventoriesTypeName]) VALUES (@InventoriesTypeName);
SELECT InventoriesTypeId, InventoriesTypeName FROM InventoriesTypes WHERE (InventoriesTypeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@InventoriesTypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="InventoriesTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT InventoriesTypeId, InventoriesTypeName FROM dbo.InventoriesTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[InventoriesTypes] SET [InventoriesTypeName] = @InventoriesTypeName WHERE (([InventoriesTypeId] = @Original_InventoriesTypeId) AND ([InventoriesTypeName] = @Original_InventoriesTypeName));
SELECT InventoriesTypeId, InventoriesTypeName FROM InventoriesTypes WHERE (InventoriesTypeId = @InventoriesTypeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@InventoriesTypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="InventoriesTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_InventoriesTypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="InventoriesTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="InventoriesTypeId" ColumnName="InventoriesTypeId" DataSourceName="DemirbasDb.dbo.InventoriesTypes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@InventoriesTypeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="InventoriesTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="InventoriesTypeId" DataSetColumn="InventoriesTypeId" />
              <Mapping SourceColumn="InventoriesTypeName" DataSetColumn="InventoriesTypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonnelsTableAdapter" GeneratorDataComponentClassName="PersonnelsTableAdapter" Name="Personnels" UserDataComponentName="PersonnelsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DemirbasDbConnectionString (Settings)" DbObjectName="DemirbasDb.dbo.Personnels" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Personnels] WHERE (([PersonnelId] = @Original_PersonnelId) AND ([PersonnelFirstName] = @Original_PersonnelFirstName) AND ([PersonnelLastName] = @Original_PersonnelLastName) AND ((@IsNull_BranchId = 1 AND [BranchId] IS NULL) OR ([BranchId] = @Original_BranchId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonnelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonnelId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PersonnelFirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PersonnelFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PersonnelLastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PersonnelLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BranchId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BranchId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BranchId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BranchId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Personnels] ([PersonnelFirstName], [PersonnelLastName], [BranchId]) VALUES (@PersonnelFirstName, @PersonnelLastName, @BranchId);
SELECT PersonnelId, PersonnelFirstName, PersonnelLastName, BranchId FROM Personnels WHERE (PersonnelId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PersonnelFirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PersonnelFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PersonnelLastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PersonnelLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BranchId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BranchId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PersonnelId, PersonnelFirstName, PersonnelLastName, BranchId FROM dbo.Personnels</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Personnels] SET [PersonnelFirstName] = @PersonnelFirstName, [PersonnelLastName] = @PersonnelLastName, [BranchId] = @BranchId WHERE (([PersonnelId] = @Original_PersonnelId) AND ([PersonnelFirstName] = @Original_PersonnelFirstName) AND ([PersonnelLastName] = @Original_PersonnelLastName) AND ((@IsNull_BranchId = 1 AND [BranchId] IS NULL) OR ([BranchId] = @Original_BranchId)));
SELECT PersonnelId, PersonnelFirstName, PersonnelLastName, BranchId FROM Personnels WHERE (PersonnelId = @PersonnelId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PersonnelFirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PersonnelFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PersonnelLastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PersonnelLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BranchId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BranchId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonnelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonnelId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PersonnelFirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PersonnelFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PersonnelLastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PersonnelLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BranchId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BranchId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BranchId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BranchId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PersonnelId" ColumnName="PersonnelId" DataSourceName="DemirbasDb.dbo.Personnels" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PersonnelId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PersonnelId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PersonnelId" DataSetColumn="PersonnelId" />
              <Mapping SourceColumn="PersonnelFirstName" DataSetColumn="PersonnelFirstName" />
              <Mapping SourceColumn="PersonnelLastName" DataSetColumn="PersonnelLastName" />
              <Mapping SourceColumn="BranchId" DataSetColumn="BranchId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoomsTableAdapter" GeneratorDataComponentClassName="RoomsTableAdapter" Name="Rooms" UserDataComponentName="RoomsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DemirbasDbConnectionString (Settings)" DbObjectName="DemirbasDb.dbo.Rooms" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Rooms] WHERE (([RoomId] = @Original_RoomId) AND ([RoomName] = @Original_RoomName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_RoomName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Rooms] ([RoomName]) VALUES (@RoomName);
SELECT RoomId, RoomName FROM Rooms WHERE (RoomId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoomId, RoomName FROM dbo.Rooms</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Rooms] SET [RoomName] = @RoomName WHERE (([RoomId] = @Original_RoomId) AND ([RoomName] = @Original_RoomName));
SELECT RoomId, RoomName FROM Rooms WHERE (RoomId = @RoomId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_RoomName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RoomId" ColumnName="RoomId" DataSourceName="DemirbasDb.dbo.Rooms" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoomId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoomId" DataSetColumn="RoomId" />
              <Mapping SourceColumn="RoomName" DataSetColumn="RoomName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DemirbasDbConnectionString (Settings)" DbObjectName="DemirbasDb.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([UserId] = @Original_UserId) AND ([UserName] = @Original_UserName) AND ([UserPassword] = @Original_UserPassword))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([UserName], [UserPassword]) VALUES (@UserName, @UserPassword);
SELECT UserId, UserName, UserPassword FROM Users WHERE (UserId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserId, UserName, UserPassword FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [UserName] = @UserName, [UserPassword] = @UserPassword WHERE (([UserId] = @Original_UserId) AND ([UserName] = @Original_UserName) AND ([UserPassword] = @Original_UserPassword));
SELECT UserId, UserName, UserPassword FROM Users WHERE (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserId" ColumnName="UserId" DataSourceName="DemirbasDb.dbo.Users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="UserPassword" DataSetColumn="UserPassword" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DemirbasDbDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="DemirbasDbDataSet" msprop:Generator_DataSetName="DemirbasDbDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Branches" msprop:Generator_RowEvHandlerName="BranchesRowChangeEventHandler" msprop:Generator_RowDeletedName="BranchesRowDeleted" msprop:Generator_RowDeletingName="BranchesRowDeleting" msprop:Generator_RowEvArgName="BranchesRowChangeEvent" msprop:Generator_TablePropName="Branches" msprop:Generator_RowChangedName="BranchesRowChanged" msprop:Generator_RowChangingName="BranchesRowChanging" msprop:Generator_TableClassName="BranchesDataTable" msprop:Generator_RowClassName="BranchesRow" msprop:Generator_TableVarName="tableBranches" msprop:Generator_UserTableName="Branches">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BranchId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="BranchId" msprop:Generator_ColumnPropNameInTable="BranchIdColumn" msprop:Generator_ColumnVarNameInTable="columnBranchId" msprop:Generator_UserColumnName="BranchId" type="xs:int" />
              <xs:element name="BranchName" msprop:Generator_ColumnPropNameInRow="BranchName" msprop:Generator_ColumnPropNameInTable="BranchNameColumn" msprop:Generator_ColumnVarNameInTable="columnBranchName" msprop:Generator_UserColumnName="BranchName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Documents" msprop:Generator_RowEvHandlerName="DocumentsRowChangeEventHandler" msprop:Generator_RowDeletedName="DocumentsRowDeleted" msprop:Generator_RowDeletingName="DocumentsRowDeleting" msprop:Generator_RowEvArgName="DocumentsRowChangeEvent" msprop:Generator_TablePropName="Documents" msprop:Generator_RowChangedName="DocumentsRowChanged" msprop:Generator_RowChangingName="DocumentsRowChanging" msprop:Generator_TableClassName="DocumentsDataTable" msprop:Generator_RowClassName="DocumentsRow" msprop:Generator_TableVarName="tableDocuments" msprop:Generator_UserTableName="Documents">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DocumentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="DocumentId" msprop:Generator_ColumnPropNameInTable="DocumentIdColumn" msprop:Generator_ColumnVarNameInTable="columnDocumentId" msprop:Generator_UserColumnName="DocumentId" type="xs:int" />
              <xs:element name="InventoriesTypeId" msprop:Generator_ColumnPropNameInRow="InventoriesTypeId" msprop:Generator_ColumnPropNameInTable="InventoriesTypeIdColumn" msprop:Generator_ColumnVarNameInTable="columnInventoriesTypeId" msprop:Generator_UserColumnName="InventoriesTypeId" type="xs:int" minOccurs="0" />
              <xs:element name="DocumentsDate" msprop:Generator_ColumnPropNameInRow="DocumentsDate" msprop:Generator_ColumnPropNameInTable="DocumentsDateColumn" msprop:Generator_ColumnVarNameInTable="columnDocumentsDate" msprop:Generator_UserColumnName="DocumentsDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="DocumentPrice" msprop:Generator_ColumnPropNameInRow="DocumentPrice" msprop:Generator_ColumnPropNameInTable="DocumentPriceColumn" msprop:Generator_ColumnVarNameInTable="columnDocumentPrice" msprop:Generator_UserColumnName="DocumentPrice" type="xs:int" />
              <xs:element name="DocumentCompany" msprop:Generator_ColumnPropNameInRow="DocumentCompany" msprop:Generator_ColumnPropNameInTable="DocumentCompanyColumn" msprop:Generator_ColumnVarNameInTable="columnDocumentCompany" msprop:Generator_UserColumnName="DocumentCompany">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Inventories" msprop:Generator_RowEvHandlerName="InventoriesRowChangeEventHandler" msprop:Generator_RowDeletedName="InventoriesRowDeleted" msprop:Generator_RowDeletingName="InventoriesRowDeleting" msprop:Generator_RowEvArgName="InventoriesRowChangeEvent" msprop:Generator_TablePropName="Inventories" msprop:Generator_RowChangedName="InventoriesRowChanged" msprop:Generator_RowChangingName="InventoriesRowChanging" msprop:Generator_TableClassName="InventoriesDataTable" msprop:Generator_RowClassName="InventoriesRow" msprop:Generator_TableVarName="tableInventories" msprop:Generator_UserTableName="Inventories">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="InventoryId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="InventoryId" msprop:Generator_ColumnPropNameInTable="InventoryIdColumn" msprop:Generator_ColumnVarNameInTable="columnInventoryId" msprop:Generator_UserColumnName="InventoryId" type="xs:int" />
              <xs:element name="InventoriesTypeId" msprop:Generator_ColumnPropNameInRow="InventoriesTypeId" msprop:Generator_ColumnPropNameInTable="InventoriesTypeIdColumn" msprop:Generator_ColumnVarNameInTable="columnInventoriesTypeId" msprop:Generator_UserColumnName="InventoriesTypeId" type="xs:int" minOccurs="0" />
              <xs:element name="InventoryBarkod" msprop:Generator_ColumnPropNameInRow="InventoryBarkod" msprop:Generator_ColumnPropNameInTable="InventoryBarkodColumn" msprop:Generator_ColumnVarNameInTable="columnInventoryBarkod" msprop:Generator_UserColumnName="InventoryBarkod">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RoomId" msprop:Generator_ColumnPropNameInRow="RoomId" msprop:Generator_ColumnPropNameInTable="RoomIdColumn" msprop:Generator_ColumnVarNameInTable="columnRoomId" msprop:Generator_UserColumnName="RoomId" type="xs:int" minOccurs="0" />
              <xs:element name="PersonnelId" msprop:Generator_ColumnPropNameInRow="PersonnelId" msprop:Generator_ColumnPropNameInTable="PersonnelIdColumn" msprop:Generator_ColumnVarNameInTable="columnPersonnelId" msprop:Generator_UserColumnName="PersonnelId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="InventoriesTypes" msprop:Generator_RowEvHandlerName="InventoriesTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="InventoriesTypesRowDeleted" msprop:Generator_RowDeletingName="InventoriesTypesRowDeleting" msprop:Generator_RowEvArgName="InventoriesTypesRowChangeEvent" msprop:Generator_TablePropName="InventoriesTypes" msprop:Generator_RowChangedName="InventoriesTypesRowChanged" msprop:Generator_RowChangingName="InventoriesTypesRowChanging" msprop:Generator_TableClassName="InventoriesTypesDataTable" msprop:Generator_RowClassName="InventoriesTypesRow" msprop:Generator_TableVarName="tableInventoriesTypes" msprop:Generator_UserTableName="InventoriesTypes">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="InventoriesTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="InventoriesTypeId" msprop:Generator_ColumnPropNameInTable="InventoriesTypeIdColumn" msprop:Generator_ColumnVarNameInTable="columnInventoriesTypeId" msprop:Generator_UserColumnName="InventoriesTypeId" type="xs:int" />
              <xs:element name="InventoriesTypeName" msprop:Generator_ColumnPropNameInRow="InventoriesTypeName" msprop:Generator_ColumnPropNameInTable="InventoriesTypeNameColumn" msprop:Generator_ColumnVarNameInTable="columnInventoriesTypeName" msprop:Generator_UserColumnName="InventoriesTypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Personnels" msprop:Generator_RowEvHandlerName="PersonnelsRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonnelsRowDeleted" msprop:Generator_RowDeletingName="PersonnelsRowDeleting" msprop:Generator_RowEvArgName="PersonnelsRowChangeEvent" msprop:Generator_TablePropName="Personnels" msprop:Generator_RowChangedName="PersonnelsRowChanged" msprop:Generator_RowChangingName="PersonnelsRowChanging" msprop:Generator_TableClassName="PersonnelsDataTable" msprop:Generator_RowClassName="PersonnelsRow" msprop:Generator_TableVarName="tablePersonnels" msprop:Generator_UserTableName="Personnels">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PersonnelId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="PersonnelId" msprop:Generator_ColumnPropNameInTable="PersonnelIdColumn" msprop:Generator_ColumnVarNameInTable="columnPersonnelId" msprop:Generator_UserColumnName="PersonnelId" type="xs:int" />
              <xs:element name="PersonnelFirstName" msprop:Generator_ColumnPropNameInRow="PersonnelFirstName" msprop:Generator_ColumnPropNameInTable="PersonnelFirstNameColumn" msprop:Generator_ColumnVarNameInTable="columnPersonnelFirstName" msprop:Generator_UserColumnName="PersonnelFirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PersonnelLastName" msprop:Generator_ColumnPropNameInRow="PersonnelLastName" msprop:Generator_ColumnPropNameInTable="PersonnelLastNameColumn" msprop:Generator_ColumnVarNameInTable="columnPersonnelLastName" msprop:Generator_UserColumnName="PersonnelLastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BranchId" msprop:Generator_ColumnPropNameInRow="BranchId" msprop:Generator_ColumnPropNameInTable="BranchIdColumn" msprop:Generator_ColumnVarNameInTable="columnBranchId" msprop:Generator_UserColumnName="BranchId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Rooms" msprop:Generator_RowEvHandlerName="RoomsRowChangeEventHandler" msprop:Generator_RowDeletedName="RoomsRowDeleted" msprop:Generator_RowDeletingName="RoomsRowDeleting" msprop:Generator_RowEvArgName="RoomsRowChangeEvent" msprop:Generator_TablePropName="Rooms" msprop:Generator_RowChangedName="RoomsRowChanged" msprop:Generator_RowChangingName="RoomsRowChanging" msprop:Generator_TableClassName="RoomsDataTable" msprop:Generator_RowClassName="RoomsRow" msprop:Generator_TableVarName="tableRooms" msprop:Generator_UserTableName="Rooms">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoomId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="RoomId" msprop:Generator_ColumnPropNameInTable="RoomIdColumn" msprop:Generator_ColumnVarNameInTable="columnRoomId" msprop:Generator_UserColumnName="RoomId" type="xs:int" />
              <xs:element name="RoomName" msprop:Generator_ColumnPropNameInRow="RoomName" msprop:Generator_ColumnPropNameInTable="RoomNameColumn" msprop:Generator_ColumnVarNameInTable="columnRoomName" msprop:Generator_UserColumnName="RoomName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_TablePropName="Users" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_RowClassName="UsersRow" msprop:Generator_TableVarName="tableUsers" msprop:Generator_UserTableName="Users">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_UserColumnName="UserId" type="xs:int" />
              <xs:element name="UserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_UserColumnName="UserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserPassword" msprop:Generator_ColumnPropNameInRow="UserPassword" msprop:Generator_ColumnPropNameInTable="UserPasswordColumn" msprop:Generator_ColumnVarNameInTable="columnUserPassword" msprop:Generator_UserColumnName="UserPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Branches" />
      <xs:field xpath="mstns:BranchId" />
    </xs:unique>
    <xs:unique name="Documents_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Documents" />
      <xs:field xpath="mstns:DocumentId" />
    </xs:unique>
    <xs:unique name="Inventories_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Inventories" />
      <xs:field xpath="mstns:InventoryId" />
    </xs:unique>
    <xs:unique name="InventoriesTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:InventoriesTypes" />
      <xs:field xpath="mstns:InventoriesTypeId" />
    </xs:unique>
    <xs:unique name="Personnels_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Personnels" />
      <xs:field xpath="mstns:PersonnelId" />
    </xs:unique>
    <xs:unique name="Rooms_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Rooms" />
      <xs:field xpath="mstns:RoomId" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Documents_InventoriesTypeId" msdata:parent="InventoriesTypes" msdata:child="Documents" msdata:parentkey="InventoriesTypeId" msdata:childkey="InventoriesTypeId" msprop:Generator_UserParentTable="InventoriesTypes" msprop:Generator_UserChildTable="Documents" msprop:Generator_RelationVarName="relationFK_Documents_InventoriesTypeId" msprop:Generator_UserRelationName="FK_Documents_InventoriesTypeId" msprop:Generator_ChildPropName="GetDocumentsRows" msprop:Generator_ParentPropName="InventoriesTypesRow" />
      <msdata:Relationship name="FK_Inventories_InventoriesTypeId" msdata:parent="InventoriesTypes" msdata:child="Inventories" msdata:parentkey="InventoriesTypeId" msdata:childkey="InventoriesTypeId" msprop:Generator_UserParentTable="InventoriesTypes" msprop:Generator_UserChildTable="Inventories" msprop:Generator_RelationVarName="relationFK_Inventories_InventoriesTypeId" msprop:Generator_UserRelationName="FK_Inventories_InventoriesTypeId" msprop:Generator_ChildPropName="GetInventoriesRows" msprop:Generator_ParentPropName="InventoriesTypesRow" />
      <msdata:Relationship name="FK_Inventories_PersonnelId" msdata:parent="Personnels" msdata:child="Inventories" msdata:parentkey="PersonnelId" msdata:childkey="PersonnelId" msprop:Generator_UserParentTable="Personnels" msprop:Generator_UserChildTable="Inventories" msprop:Generator_RelationVarName="relationFK_Inventories_PersonnelId" msprop:Generator_UserRelationName="FK_Inventories_PersonnelId" msprop:Generator_ChildPropName="GetInventoriesRows" msprop:Generator_ParentPropName="PersonnelsRow" />
      <msdata:Relationship name="FK_Inventories_RoomId" msdata:parent="Rooms" msdata:child="Inventories" msdata:parentkey="RoomId" msdata:childkey="RoomId" msprop:Generator_UserParentTable="Rooms" msprop:Generator_UserChildTable="Inventories" msprop:Generator_RelationVarName="relationFK_Inventories_RoomId" msprop:Generator_UserRelationName="FK_Inventories_RoomId" msprop:Generator_ChildPropName="GetInventoriesRows" msprop:Generator_ParentPropName="RoomsRow" />
      <msdata:Relationship name="FK_Personnels_BranchId" msdata:parent="Branches" msdata:child="Personnels" msdata:parentkey="BranchId" msdata:childkey="BranchId" msprop:Generator_UserParentTable="Branches" msprop:Generator_UserChildTable="Personnels" msprop:Generator_RelationVarName="relationFK_Personnels_BranchId" msprop:Generator_ChildPropName="GetPersonnelsRows" msprop:Generator_ParentPropName="BranchesRow" msprop:Generator_UserRelationName="FK_Personnels_BranchId" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>